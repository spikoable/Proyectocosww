package tserviceClases;
// Generated 19/02/2015 11:32:35 PM by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.List;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Persona generated by hbm2java
 */
@Entity
@Table(name="Persona"
    ,catalog="coswg2"
)
@Inheritance(strategy=InheritanceType.JOINED)
public class Persona  implements java.io.Serializable {


     private int identificacion;
     private HojaDeVida hojaDeVida;
     private String nombre;
     private Date fechaNacimiento;
     private Publicante publicante;
     private List<ExperienciaLaboral> experienciaLaborals = (List<ExperienciaLaboral>) new HashSet(0);
     private Postulante postulante;
     private List<Direcciones> direccioneses = (List<Direcciones>) new HashSet(0);
     private List<Correo> correos = (List<Correo>) new HashSet(0);

    public Persona() {
    }

	
    public Persona(int identificacion, String nombre, Date fechaNacimiento) {
        this.identificacion = identificacion;
        this.nombre = nombre;
        this.fechaNacimiento = fechaNacimiento;
    }
    public Persona(int identificacion, HojaDeVida hojaDeVida, String nombre, Date fechaNacimiento, List<ExperienciaLaboral> experienciaLaborals, List<Direcciones> direccioneses, List<Correo> correos) {
       this.identificacion = identificacion;
       this.hojaDeVida = hojaDeVida;
       this.nombre = nombre;
       this.fechaNacimiento = fechaNacimiento;
       this.experienciaLaborals = experienciaLaborals;
       this.direccioneses = direccioneses;
       this.correos = correos;
    }
   
     @Id 

    
    @Column(name="Identificacion", unique=true, nullable=false)
    public int getIdentificacion() {
        return this.identificacion;
    }
    
    public void setIdentificacion(int identificacion) {
        this.identificacion = identificacion;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="Hoja de Vida_Id")
    public HojaDeVida getHojaDeVida() {
        return this.hojaDeVida;
    }
    
    public void setHojaDeVida(HojaDeVida hojaDeVida) {
        this.hojaDeVida = hojaDeVida;
    }

    
    @Column(name="Nombre", nullable=false, length=45)
    public String getNombre() {
        return this.nombre;
    }
    
    public void setNombre(String nombre) {
        this.nombre = nombre;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="Fecha Nacimiento", nullable=false, length=10)
    public Date getFechaNacimiento() {
        return this.fechaNacimiento;
    }
    
    public void setFechaNacimiento(Date fechaNacimiento) {
        this.fechaNacimiento = fechaNacimiento;
    }

//@OneToOne(fetch=FetchType.LAZY, mappedBy="Publicante")
    public Publicante getPublicante() {
        return this.publicante;
    }
    
    public void setPublicante(Publicante publicante) {
        this.publicante = publicante;
    }

@ManyToMany(fetch = FetchType.LAZY)
    @JoinTable(name="Persona_has_Experiencia Laboral", joinColumns = { 
        @JoinColumn(name="Identificacion", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="ExperienciaLaboral_Id", nullable=false, updatable=false) })
    public List<ExperienciaLaboral> getExperienciaLaborals() {
        return this.experienciaLaborals;
    }
    
    public void setExperienciaLaborals(List<ExperienciaLaboral>  experienciaLaborals) {
        this.experienciaLaborals = experienciaLaborals;
    }


    
    public void setPostulante(Postulante postulante) {
        this.postulante = postulante;
    }

@OneToMany(fetch=FetchType.LAZY)

    @JoinColumn(name="Identificacion", nullable=false)
    public List<Direcciones> getDireccioneses() {
        return this.direccioneses;
    }
    
    public void setDireccioneses(List<Direcciones>  direccioneses) {
        this.direccioneses = direccioneses;
    }

@OneToMany(fetch=FetchType.LAZY)
    @JoinColumn(name="Identificacion", nullable=false)
    public List<Correo>  getCorreos() {
        return this.correos;
    }
    
    public void setCorreos(List<Correo>  correos) {
        this.correos = correos;
    }




}


